version: '3.7'

services:

  mongodb_1:
    image: mongo:5
    hostname: 54.183.245.241
    command: --replSet rs1 --keyFile /etc/mongo-replication.key
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    ports:
      - 27018:27017
    volumes:
      - mongodb_data_1:/data/db
      - /home/ubuntu/mongo_keys/security.keyFile:/etc/mongo-replication.key

  mongodb_2:
    image: mongo:5
    hostname: 54.183.245.241
    command: --replSet rs1 --keyFile /etc/mongo-replication.key
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    ports:
      - 27019:27017
    volumes:
      - mongodb_data_2:/data/db
      - /home/ubuntu/mongo_keys/security.keyFile:/etc/mongo-replication.key
    depends_on:
      - mongodb_1

  mongodb_3:
    image: mongo:5
    hostname: 54.183.245.241
    command: --replSet rs1 --keyFile /etc/mongo-replication.key
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    ports:
      - 27020:27017
    volumes:
      - mongodb_data_3:/data/db
      - /home/ubuntu/mongo_keys/security.keyFile:/etc/mongo-replication.key
    depends_on:
      - mongodb_1

volumes:
  mongodb_data_1:
  mongodb_data_2:
  mongodb_data_3:


# docker network ls

# docker run --rm --network clustermongo_default mongo:5 mongosh --username admin --password admin --host 54.183.245.241:27018  --authenticationDatabase admin admin --eval "$(< init-replica-set.js)"

# docker run --rm --network clustermongo_default mongo:5 mongosh --username admin --password admin --host 54.183.245.241:27018  --authenticationDatabase admin admin --eval "rs.status()"

# docker run --rm --network clustermongo_default mongo:5 mongosh --username admin --password admin --host 54.183.245.241:27018 --authenticationDatabase admin admin --eval "$(< init-user.js)"

# docker run --rm -i -t --network clustermongo_default mongo:5 mongosh --username admin --password admin --host 54.183.245.241:27018,54.183.245.241:27019,54.183.245.241:27020 --authenticationDatabase admin admin


# telnet 54.183.245.241 27017


# mongodb://my_user:my_pass@54.183.245.241:27018,54.183.245.241:27019,54.183.245.241:27020/my_database?replicaSet=rs1


# rs1:PRIMARY> use my_database
# switched to db my_database
# rs1:PRIMARY> db.auth("my_user","my_pass")
